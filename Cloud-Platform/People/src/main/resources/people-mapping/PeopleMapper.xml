<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzgc.cloud.people.dao.PeopleMapper">
    <resultMap id="BaseResultMap" type="com.hzgc.cloud.people.model.People">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="idcard" property="idcard" jdbcType="VARCHAR"/>
        <result column="region" property="region" jdbcType="BIGINT"/>
        <result column="street" property="street" jdbcType="BIGINT"/>
        <result column="gridcode" property="gridcode" jdbcType="BIGINT"/>
        <result column="household" property="household" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="politic" property="politic" jdbcType="VARCHAR"/>
        <result column="edulevel" property="edulevel" jdbcType="VARCHAR"/>
        <result column="job" property="job" jdbcType="VARCHAR"/>
        <result column="birthplace" property="birthplace" jdbcType="VARCHAR"/>
        <result column="community" property="community" jdbcType="BIGINT"/>
        <result column="lasttime" property="lasttime" jdbcType="TIMESTAMP"/>
        <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
        <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP"/>
        <collection property="flag" ofType="com.hzgc.cloud.people.model.Flag" column="id"
                    select="com.hzgc.cloud.people.dao.FlagMapper.selectByPeopleId"/>
        <collection property="imsi" ofType="com.hzgc.cloud.people.model.Imsi" column="id"
                    select="com.hzgc.cloud.people.dao.ImsiMapper.selectByPeopleId"/>
        <collection property="imei" ofType="com.hzgc.cloud.people.model.Imei" column="id"
                    select="com.hzgc.cloud.people.dao.ImeiMapper.selectByPeopleId"/>
        <collection property="phone" ofType="com.hzgc.cloud.people.model.Phone" column="id"
                    select="com.hzgc.cloud.people.dao.PhoneMapper.selectByPeopleId"/>
        <collection property="house" ofType="com.hzgc.cloud.people.model.House" column="id"
                    select="com.hzgc.cloud.people.dao.HouseMapper.selectByPeopleId"/>
        <collection property="car" ofType="com.hzgc.cloud.people.model.Car" column="id"
                    select="com.hzgc.cloud.people.dao.CarMapper.selectByPeopleId"/>
        <collection property="picture" ofType="com.hzgc.cloud.people.model.PictureWithBLOBs" column="id"
                    select="com.hzgc.cloud.people.dao.PictureMapper.selectByPeopleId"/>
    </resultMap>
    <resultMap id="CollectionResultMap" type="com.hzgc.cloud.people.model.People">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="idcard" property="idcard" jdbcType="VARCHAR"/>
        <result column="region" property="region" jdbcType="BIGINT"/>
        <result column="street" property="street" jdbcType="BIGINT"/>
        <result column="gridcode" property="gridcode" jdbcType="BIGINT"/>
        <result column="household" property="household" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="politic" property="politic" jdbcType="VARCHAR"/>
        <result column="edulevel" property="edulevel" jdbcType="VARCHAR"/>
        <result column="job" property="job" jdbcType="VARCHAR"/>
        <result column="birthplace" property="birthplace" jdbcType="VARCHAR"/>
        <result column="community" property="community" jdbcType="BIGINT"/>
        <result column="lasttime" property="lasttime" jdbcType="TIMESTAMP"/>
        <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
        <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP"/>
        <collection property="flag" ofType="com.hzgc.cloud.people.model.Flag" column="id"
                    select="com.hzgc.cloud.people.dao.FlagMapper.selectByPeopleId"/>
        <collection property="picture" ofType="com.hzgc.cloud.people.model.PictureWithBLOBs" column="id"
                    select="com.hzgc.cloud.people.dao.PictureMapper.selectByPeopleId"/>
        <collection property="imei" ofType="com.hzgc.cloud.people.model.Imei" column="id"
                    select="com.hzgc.cloud.people.dao.ImeiMapper.selectByPeopleId"/>
    </resultMap>
    <resultMap id="CommunityPeopleMap" type="com.hzgc.cloud.people.model.People">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="idcard" property="idcard" jdbcType="VARCHAR"/>
        <result column="lasttime" property="lasttime" jdbcType="TIMESTAMP"/>
        <result column="pid" property="pictureId" jdbcType="BIGINT"/>
    </resultMap>
    <resultMap id="CountResultMap" type="com.hzgc.cloud.community.model.CountCommunityPeople" >
        <result column="community" property="community" jdbcType="BIGINT" />
        <result column="count" property="count" jdbcType="INTEGER" />
    </resultMap>
    <resultMap id="CommunityPeopleInfo" type="com.hzgc.cloud.people.model.People" >
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="idcard" property="idcard" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="birthplace" property="birthplace" jdbcType="VARCHAR"/>
        <result column="pid" property="pictureId" jdbcType="BIGINT"/>
    </resultMap>
    <resultMap id="CountMap" type="com.hzgc.cloud.community.model.Count" >
        <result column="flagid" property="flagid" jdbcType="INTEGER"/>
        <result column="count" property="count" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List">
        id, name, idcard, region, street, gridcode, household, address, sex, politic, edulevel,
        job, birthplace, community, lasttime, createtime, updatetime
    </sql>
    <!--网格人口数量统计-->
    <select id="countGridPeople" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select count(*) from t_people where gridcode = #{gridCode,jdbcType=BIGINT}
    </select>
    <!--网格标签人口数量统计-->
    <select id="countFlagPeople" resultMap="CountMap" parameterType="java.lang.Long">
        select f.flagid, count(f.flagid) as count
        from (
        select p.id, p.gridcode from t_people p, t_picture i
        where p.gridcode = #{gridCode,jdbcType=BIGINT} and p.id = i.peopleid group by p.id
        ) pp, t_flag f
        WHERE pp.id = f.peopleid
        GROUP BY f.flagid;
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_people
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="selectByIdCard" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_people
        where idcard = #{idCard,jdbcType=VARCHAR}
    </select>
    <select id="searchPeopleByIdCard" resultMap="CommunityPeopleInfo" parameterType="java.lang.String">
        select id, name, idcard, sex, birthplace, address
        from t_people
        where idcard = #{idcard,jdbcType=VARCHAR}
    </select>
    <!--姓名,身份证号,imis,电话号码模糊匹配-->
    <select id="searchPeople" resultMap="CollectionResultMap" parameterType="com.hzgc.cloud.people.param.SearchPeopleDTO">
        select
        <include refid="Base_Column_List"/>
        from t_people
        <where>
            <if test="communityId == null and regionIds != null and regionIds.size() > 0">
                region in
                <foreach collection="regionIds" item="model" open="(" close=")" separator=",">
                    #{model}
                </foreach>
            </if>
            <if test="gridCodes != null and gridCodes.size() > 0">
                gridcode in
                <foreach collection="gridCodes" item="model" open="(" close=")" separator=",">
                    #{model}
                </foreach>
            </if>
            <if test="communityId != null ">
                and community = #{communityId,jdbcType=BIGINT}
            </if>
            <if test="searchType == 0 and searchVal.length() > 0">
                and name like "%" #{searchVal,jdbcType=VARCHAR} "%"
            </if>
            <if test="searchType == 1 and searchVal.length() > 0">
                and idcard like "%" #{searchVal,jdbcType=VARCHAR} "%"
            </if>
            <if test="searchType == 2 and searchVal.length() > 0">
                and id in (select peopleid from t_imsi where imsi like "%" #{searchVal,jdbcType=VARCHAR} "%")
            </if>
            <if test="searchType == 3 and searchVal.length() > 0">
                and id in (select peopleid from t_phone where phone like "%" #{searchVal,jdbcType=VARCHAR} "%")
            </if>
            <if test="searchType == 4 ">
                and id in (select peopleid from t_flag where flagid = #{searchVal,jdbcType=VARCHAR})
            </if>
            <if test="searchType == 5 and searchVal.length() > 0">
                and id in (select peopleid from t_imei where imei = #{searchVal,jdbcType=VARCHAR})
            </if>
        </where>
    </select>
    <!--小区实有人口数量统计-->
    <select id="countCommunityPeople" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select count(*) from t_people where community = #{community,jdbcType=BIGINT}
    </select>
    <!--统计单个范围（省市区）下所有实有小区列表-->
    <select id="getCommunityIdsById" resultType="java.lang.Long" parameterType="java.lang.Long">
        select distinct community from t_people where community in
        <foreach collection="list" item="model" open="(" close=")" separator=",">
            #{model}
        </foreach>
        and community is not null
    </select>
    <!--小区重点人口数量统计-->
    <select id="countImportantPeople" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select count(*) from
        (select a.id, a.name, a.idcard, a.lasttime, c.id as pid
        from t_people a, t_flag b, t_picture c
        where b.flagid in (0, 1, 2, 3, 4, 5, 6, 8, 9, 10)
        and a.id = b.peopleid
        and a.id = c.peopleid
        and a.community = #{community,jdbcType=BIGINT}
        group by a.id) t_temp
    </select>
    <!--小区重点人口查询-->
    <select id="searchImportantPeople"  resultMap="CommunityPeopleMap" parameterType="com.hzgc.cloud.community.param.PeopleDTO" >
        select a.id, a.name, a.idcard, a.lasttime, c.id as pid
        from t_people a, t_flag b, t_picture c
        where b.flagid in (0, 1, 2, 3, 4, 5, 6, 8, 9, 10)
        and a.id = b.peopleid
        and a.id = c.peopleid
        and a.community = #{communityId,jdbcType=BIGINT}
        <if test="searchVal != null and searchVal != ''">
            and (a.name like CONCAT('%', #{searchVal,jdbcType=VARCHAR}, '%')
            or
            a.idcard like CONCAT('%', #{searchVal,jdbcType=VARCHAR}, '%'))
        </if>
        group by a.id
    </select>
    <!--小区关爱人口数量统计-->
    <select id="countCarePeople" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select count(*) from
        (select a.id, a.name, a.idcard, a.lasttime, c.id as pid
        from t_people a, t_flag b, t_picture c
        where b.flagid = 7
        and a.id = b.peopleid
        and a.id = c.peopleid
        and a.community = #{community,jdbcType=BIGINT}
        group by a.id) t_temp
    </select>
    <!--小区关爱人口查询-->
    <select id="searchCarePeople" resultMap="CommunityPeopleMap" parameterType="java.lang.Long">
        select a.id, a.name, a.idcard, a.lasttime, c.id as pid
        from t_people a, t_flag b, t_picture c
        where b.flagid = 7
        and a.id = b.peopleid
        and a.id = c.peopleid
        and a.community = #{community,jdbcType=BIGINT}
        group by a.id
    </select>
    <!--小区实有人口查询-->
    <select id="searchCommunityPeople" resultMap="CommunityPeopleMap" parameterType="java.lang.Long">
        select a.id, a.name, a.idcard, a.lasttime, b.id as pid
        from t_people a, t_picture b
        where a.community = #{community,jdbcType=BIGINT}
        and a.id = b.peopleid
        group by b.peopleid
    </select>
    <!--小区新增人口查询-->
    <select id="searchNewPeople" resultMap="CommunityPeopleMap" parameterType="java.lang.Long">
        select a.id, a.name, a.idcard, a.lasttime, c.id as pid
        from t_people a, t_people_new b, t_picture c
        where b.isconfirm = 2
        and DATE_FORMAT(now(), '%Y%m') = b.month
        and a.id = b.peopleid
        and a.id = c.peopleid
        and b.community = #{community,jdbcType=BIGINT}
        group by c.peopleid
    </select>
    <!--小区迁出人口查询-->
    <select id="searchOutPeople" resultMap="CommunityPeopleMap" parameterType="java.lang.Long">
        select a.id, a.name, a.idcard, a.lasttime, c.id as pid
        from t_people a, t_people_out b, t_picture c
        where b.isconfirm = 2
        and DATE_FORMAT(now(), '%Y%m') = b.month
        and a.id = b.peopleid
        and a.id = c.peopleid
        and b.community = #{community,jdbcType=BIGINT}
        group by c.peopleid
    </select>
    <!--小区迁入迁出人口信息查询-->
    <select id="searchCommunityPeopleInfo" resultMap="CommunityPeopleInfo" parameterType="java.lang.String">
        select a.id, a.name, a.idcard, a.sex, a.birthplace, a.address, b.id as pid
        from t_people a, t_picture b
        where a.id = b.peopleid
        and a.id = #{id,jdbcType=VARCHAR}
        group by b.peopleid
    </select>
    <!--重点人员识别记录查询-->
    <select id="getImportantPeopleId" resultType="java.lang.String" parameterType="java.lang.Long">
        select distinct a.id
        from t_people a, t_flag b
        where a.id = b.peopleid
        and a.community in
        <foreach collection="list" item="model" open="(" close=")" separator=",">
            #{model}
        </foreach>
        and b.flagid in(0, 1, 2, 3, 4, 5, 6, 8, 9, 10)
    </select>
    <!--根据人员ID删除小区ID-->
    <update id="deleteCommunityByPeopleId" parameterType="java.lang.String">
        update t_people set community = null where id = #{id,jdbcType=VARCHAR}
    </update>
    <!--根据人员ID添加小区ID-->
    <update id="insertCommunityByPeopleId" parameterType="com.hzgc.cloud.community.param.AffirmOperationDTO">
        update t_people set community = #{communityId,jdbcType=BIGINT} where id = #{peopleId,jdbcType=VARCHAR}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from t_people
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.hzgc.cloud.people.model.People">
        insert into t_people (id, name, idcard,
        region, household, address,
        sex, age, birthday,
        politic, edulevel, job,
        birthplace, community, lasttime,
        createtime, updatetime)
        values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR},
        #{region,jdbcType=BIGINT}, #{household,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
        #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{birthday,jdbcType=VARCHAR},
        #{politic,jdbcType=VARCHAR}, #{edulevel,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR},
        #{birthplace,jdbcType=VARCHAR}, #{community,jdbcType=BIGINT}, #{lasttime,jdbcType=TIMESTAMP},
        #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.hzgc.cloud.people.model.People">
        insert into t_people
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="idcard != null">
                idcard,
            </if>
            <if test="region != null">
                region,
            </if>
            <if test="street != null">
                street,
            </if>
            <if test="gridcode != null">
                gridcode,
            </if>
            <if test="household != null">
                household,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="politic != null">
                politic,
            </if>
            <if test="edulevel != null">
                edulevel,
            </if>
            <if test="job != null">
                job,
            </if>
            <if test="birthplace != null">
                birthplace,
            </if>
            <if test="community != null">
                community,
            </if>
            <if test="lasttime != null">
                lasttime,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
            <if test="updatetime != null">
                updatetime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="region != null">
                #{region,jdbcType=BIGINT},
            </if>
            <if test="street != null">
                #{street,jdbcType=BIGINT},
            </if>
            <if test="gridcode != null">
                #{gridcode, jdbcType=BIGINT},
            </if>
            <if test="household != null">
                #{household,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="politic != null">
                #{politic,jdbcType=VARCHAR},
            </if>
            <if test="edulevel != null">
                #{edulevel,jdbcType=VARCHAR},
            </if>
            <if test="job != null">
                #{job,jdbcType=VARCHAR},
            </if>
            <if test="birthplace != null">
                #{birthplace,jdbcType=VARCHAR},
            </if>
            <if test="community != null">
                #{community,jdbcType=BIGINT},
            </if>
            <if test="lasttime != null">
                #{lasttime,jdbcType=TIMESTAMP},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null">
                #{updatetime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hzgc.cloud.people.model.People">
        update t_people
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                idcard = #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="region != null">
                region = #{region,jdbcType=BIGINT},
            </if>
            <if test="street != null">
                street = #{street,jdbcType=BIGINT},
            </if>
            <if test="gridcode != null">
                gridcode = #{gridcode,jdbcType=BIGINT},
            </if>
            <if test="household != null">
                household = #{household,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="politic != null">
                politic = #{politic,jdbcType=VARCHAR},
            </if>
            <if test="edulevel != null">
                edulevel = #{edulevel,jdbcType=VARCHAR},
            </if>
            <if test="job != null">
                job = #{job,jdbcType=VARCHAR},
            </if>
            <if test="birthplace != null">
                birthplace = #{birthplace,jdbcType=VARCHAR},
            </if>
            <if test="community != null">
                community = #{community,jdbcType=BIGINT},
            </if>
            <if test="lasttime != null">
                lasttime = #{lasttime,jdbcType=TIMESTAMP},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null">
                updatetime = #{updatetime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hzgc.cloud.people.model.People">
        update t_people
        set name = #{name,jdbcType=VARCHAR},
        idcard = #{idcard,jdbcType=VARCHAR},
        region = #{region,jdbcType=BIGINT},
        street = #{street,jdbcType=BIGINT},
        gridcode = #{gridcode,jdbcType=BIGINT},
        household = #{household,jdbcType=VARCHAR},
        address = #{address,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        birthday = #{birthday,jdbcType=VARCHAR},
        politic = #{politic,jdbcType=VARCHAR},
        edulevel = #{edulevel,jdbcType=VARCHAR},
        job = #{job,jdbcType=VARCHAR},
        birthplace = #{birthplace,jdbcType=VARCHAR},
        community = #{community,jdbcType=BIGINT},
        updatetime = #{updatetime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>